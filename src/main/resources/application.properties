#todas las peticiones al path /api/productos/** redirigirlas a http://ms-productos:8080/ reescribiendo el request original eliminando el prefijo /productos

# Server port
server.port=8082

# Gateway routes (TP-1 usuarios)
spring.cloud.gateway.routes[0].id=usuarios
spring.cloud.gateway.routes[0].uri=http://ms-usuarios:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/usuarios/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/usuarios?(?<segment>.*), /api/usuario$\{segment}

# Gateway routes (TP-2 productos)
spring.cloud.gateway.routes[1].id=productos
spring.cloud.gateway.routes[1].uri=http://ms-productos:3000
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/productos/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/productos/?(?<segment>.*), /api/productos/$\{segment}

# Gateway routes (TP-3 pedidos)
spring.cloud.gateway.routes[2].id=pedidos
spring.cloud.gateway.routes[2].uri=http://ms-pedidos:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/pedidos/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/pedidos?(?<segment>.*), /api/pedidos$\{segment}

# Logging
logging.level.org.springframework.cloud.gateway: TRACE
logging.level.reactor.netty: DEBUG

security.basic.enabled=false
management.security.enabled=false
# Actuator
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=
management.metrics.web.server.request.autotime.enabled=true
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

# spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
# spring.cloud.gateway.globalcors.cors-configurations.[*].allowed-origins=http://localhost:9500
# spring.cloud.gateway.globalcors.cors-configurations.[*].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.cloud.gateway.globalcors.cors-configurations.[*].allowed-headers=*
# spring.cloud.gateway.globalcors.cors-configurations.[*].allow-credentials=true

# CONFIGURACION NECESARIA PARA EUREKA
# spring.application.name=DAN-GATEWAY
# eureka.client.serviceUrl.defaultZone=http://dan-eureka:8761/eureka/
# eureka.client.initialInstanceInfoReplicationIntervalSeconds=5
# eureka.client.registryFetchIntervalSeconds: 5
# eureka.instance.leaseRenewalIntervalInSeconds: 5
# eureka.instance.leaseExpirationDurationInSeconds: 5
# FIN CONFIGURACION NECESARIA PARA EUREKA